* Terminology

* Procedure
- validate xml
- extract the relevant data
- validate the ISBN
- ignore the file if it is not meant for daisyproducer
- validate the product number
- are there exiting documents with the given product number?
  - yes
    - make sure there is only one document
    - update the metadata in the db
    - update the XML with the new metadata
      - by using a virtual "abacus" user
      - and shelling out to a jar file that implements the XML update
	- ~update-dtbook-metadata.jar~
  - otherwise
    - check if
      - there is a document with the given ISBN
      - or if there is a document with the same title and source_edition
    - yes
      - make sure there is only one document
      - update the metadata in the db
      - update the XML with the new metadata
	- by using a virtual "abacus" user
	- and shelling out to a jar file that implements the XML update
	  - update-dtbook-metadata.jar
      - update the product association
	- i.e. create a product with the given product_number, product_type and document
  - otherwise
    - Looks like the document hasn't been imported before
    - Create a new document and insert it in the db
      - with initial state set to /new/ or /in_production/
	- (/open/)
    - update the product association
      - i.e. create a product with the given product_number, product_type and document
    - Create an initial default XML with the given metadata
      - using a templating engine
      - and the ABACUS user
- (disabled) if the product_number has never been seen before then we
  are talking about a new production, i.e. try to check out the
  document in the archive
- If the order has been archived before fetch the xml from the archive
  - has been archived before
    - find out with a CMIS request
  - yes
    - get the content
      - search the product in the archive
	- using CMIS and the product_number
      - get the the sibling object (via the parents children) with the
	properties ~D:sbs:daisyFile~
      - get the latest version
      - get the content stream, read and close it
    - store the content in a temp file
    - and update the metadata
      - again by shelling out to a jar file that implements the XML
        update
	- ~update-dtbook-metadata.jar~
    - then validate the temp file (why?)
      - fail if invalid
    - Create a new version with that temp file
    - (disabled) update the content in /ueberarbeiten/

* State diagram
** Import
#+begin_src plantuml :file ABACUS_import.png
  @startuml
    start
    :Receive ABACUS XML;
    if (XML valid?) then (no)
      stop
    endif
    :Extract data;
    if (For daisyproducer?) then (no)
      stop
    elseif (ISBN (source) valid?) then (no)
      #pink:Throw error;
      stop
    elseif (product_number valid?) then (no)
      #pink:Throw error;
      stop
    elseif (Product seen before?) then (yes)
       :Update the metadata in the db;
       :Update the XML with the metadata;
    elseif (ISBN or Title+Edition seen before?) then (yes)
       :Update the metadata in the db;
       :Update the XML with the metadata;
       :Create a new product;
    else (no)
       :Create a new document in the db;
       :Create a new product;
       :Create an initial default XML;
    endif
  stop
  @enduml
#+end_src

#+RESULTS:
[[file:ABACUS_import.png]]

** Alfresco synchronization
#+begin_src plantuml :file Alfresco_sync.png
@startuml
  start
  if (document has been archived before) then (yes)
    :Get the latest content from the archive;
    :Update it with the metadata;
    :Validate it;
    :Create a new Version from it;
  endif
stop
@enduml
#+end_src

#+RESULTS:
[[file:Alfresco_sync.png]]

* Database Model

** Document
| Field                    | Type         | Null | Key | Default | Extra          |
|--------------------------+--------------+------+-----+---------+----------------|
| id                       | int          | NO   | PRI | NULL    | auto_increment |
| title                    | varchar(255) | NO   |     | NULL    |                |
| author                   | varchar(255) | NO   |     | NULL    |                |
| subject                  | varchar(255) | NO   |     | NULL    |                |
| description              | longtext     | NO   |     | NULL    |                |
| publisher                | varchar(255) | NO   |     | NULL    |                |
| date                     | date         | NO   |     | NULL    |                |
| identifier               | varchar(255) | NO   | UNI | NULL    |                |
| source                   | varchar(20)  | NO   |     | NULL    |                |
| language                 | varchar(10)  | NO   |     | NULL    |                |
| rights                   | varchar(255) | NO   |     | NULL    |                |
| source_date              | date         | YES  |     | NULL    |                |
| source_edition           | varchar(255) | NO   |     | NULL    |                |
| source_publisher         | varchar(255) | NO   |     | NULL    |                |
| source_rights            | varchar(255) | NO   |     | NULL    |                |
| state_id                 | int          | NO   | MUL | NULL    |                |
| assigned_to_id           | int          | YES  | MUL | NULL    |                |
| created_at               | datetime     | NO   |     | NULL    |                |
| modified_at              | datetime     | NO   |     | NULL    |                |
| production_series        | varchar(25)  | NO   |     | NULL    |                |
| production_series_number | varchar(25)  | NO   |     | NULL    |                |
| production_source        | varchar(25)  | NO   |     | NULL    |                |

** Product
| Field       | Type         | Null | Key | Default | Extra                              |
|-------------+--------------+------+-----+---------+------------------------------------|
| id          | int          | NO   | PRI | NULL    | auto_increment                     |
| identifier  | varchar(255) | NO   | UNI | NULL    |                                    |
| type        | smallint     | NO   |     | NULL    |                                    |
| document_id | int          | NO   | MUL | NULL    | REFERENCES documents_document (id) |

#+begin_src sql
  CREATE TABLE documents_product (
    id INT PRIMARY KEY AUTO_INCREMENT,
    identifier VARCHAR(255) NOT NULL UNIQUE,
    type SMALLINT NOT NULL,
    document_id INT NOT NULL FOREIGN KEY REFERENCES documents_document (id),
    KEY (document_id)
  );
#+end_src

*** Constraints
- Given an product.identifier there should only be one product.document_id
- product.identifier should be unique
- (product.type, product.document_id) should be unique, except for type 0

** Version
| Field         | Type         | Null | Key | Default           | Extra          |
|---------------+--------------+------+-----+-------------------+----------------|
| id            | int(11)      | NO   | PRI | NULL              | auto_increment |
| comment       | varchar(255) | NO   |     | NULL              |                |
| document_id   | int(11)      | NO   | MUL | NULL              |                |
| content       | varchar(100) | NO   |     | NULL              |                |
| created_by    | varchar(32)  | YES  |     | NULL              |                |
| created_at    | datetime     | NO   |     | CURRENT_TIMESTAMP |                |
| created_by_id | int(11)      | NO   | MUL | 1                 |                |


* Migrations

** Source

|             id | applied | description                      |
|----------------+---------+----------------------------------|
| 20210217065618 | true    | fix-documents-title-encoding     |
| 20210217070106 | true    | add-dictionary-unknownword-table |
| 20210521124204 | true    | consolidate-globalwords          |
| 20210527123202 | true    | consolidate-localwords           |
| 20210903133047 |         | set-created-at-default           |
| 20230220124612 |         | add-unknownword-ignored          |
| 20230419123446 |         | drop-detailed-accents            |
| 20240130135949 |         | add-created-by-column            |
| 20240213074641 |         | add-dictionary-unknownword-index |
| 20240222123306 |         | convert-documents-author-to-utf8 |
| 20240419081742 |         | state-renaming                   |
| 20240619152403 |         | constrain-products               |


** Production
|             id | applied             | description                      |
|----------------+---------------------+----------------------------------|
| 20210217065618 | 2021-04-09 13:21:42 | fix-documents-title-encoding     |
| 20210217070106 | 2021-04-09 13:21:42 | add-dictionary-unknownword-table |
| 20210521124204 | 2021-08-27 16:34:07 | consolidate-globalwords          |
| 20210527123202 | 2021-08-27 16:34:21 | consolidate-localwords           |

** Test
|             id | applied             | description                      |
|----------------+---------------------+----------------------------------|
| 20210217065618 | 2021-02-17 08:04:37 | fix-documents-title-encoding     |
| 20210217070106 | 2021-02-17 08:31:24 | add-dictionary-unknownword-table |
| 20210521124204 | 2021-07-12 16:04:57 | consolidate-globalwords          |
| 20210527123202 | 2021-08-02 18:07:52 | consolidate-localwords           |
| 20210805091954 | 2021-08-05 13:00:37 | add-ignored-flag                 |
