# -*- mode: restclient; -*-

#################################
# Manual tests for the REST API #
#################################

:auth-token = Token <my-secret-token>

########
# Auth #
########

# Get a token
POST http://localhost:3000/api/login
Content-Type: application/json
{
  "username": "ada",
  "password": "lovelace"
}

# Get a token
POST http://localhost:3000/api/login
Content-Type: application/json
{
  "username": "berta",
  "password": "lovelace"
}

#############
# Documents #
#############

# Get documents
GET http://localhost:3000/api/documents

# Get one document
GET http://localhost:3000/api/documents?limit=1

# Get a specific document
GET http://localhost:3000/api/documents/644

# Get a specific document in the form of transit
GET http://localhost:3000/api/documents/644
Accept: application/transit+json

# Search a specific document by title
GET http://localhost:3000/api/documents?search=verona

# Add a document
# doesn't seem to be implemented
POST http://localhost:3000/api/documents
Authorization: :auth-token
Content-Type: application/json
{
  "title": "Hehe",
  "creator": "Foo",
  "description": "not much",
  "source": "978-3-257-07184-11",
  "language": "de",
  "source_date": "2022-06-16",
  "source_publisher": "Vargos",
  "library_number": "PNX 9435",
  "state": "new",
  "identifier": "978-3-570-15263-0",
  "revision": 0,
  "date": "2022-11-22"
}

# Delete a document
DELETE http://localhost:3000/api/documents/769
Authorization: :auth-token

# Delete a non-existing document
DELETE http://localhost:3000/api/documents/31411
Authorization: :auth-token

# Set the state of a production to open
# should produce a 204
PATCH http://localhost:3000/api/documents/611
Accept: application/json
Content-Type: application/json
Authorization: :auth-token
{
 "state": "open"
}

# Set the state of a production to closed
# should produce a 400 as it is already closed
PATCH http://localhost:3000/api/documents/611
Accept: application/json
Content-Type: application/json
Authorization: :auth-token
{
 "state": "closed"
}

# Set the state of a non-existing production to closed
# should produce a 404
PATCH http://localhost:3000/api/documents/301111111
Accept: application/json
Content-Type: application/json
Authorization: :auth-token
{
 "state": "closed"
}

# Set the state of a production to an invalid state
# should produce a 400
PATCH http://localhost:3000/api/documents/611
Accept: application/json
Content-Type: application/json
Authorization: :auth-token
{
 "state": "haha"
}

##############
# # Versions #
##############

# Get all versions for a document
GET http://localhost:3000/api/documents/105/versions

GET http://localhost:3000/api/documents/105/versions?latest=false

# Search a version for a document
GET http://localhost:3000/api/documents/770/versions?search=hallo

# Get a specific version
GET http://localhost:3000/api/documents/770/versions/9171

# Get a specific non-existing version
GET http://localhost:3000/api/documents/770/versions/0

# Get the latest version
GET http://localhost:3000/api/documents/770/versions?latest=true

# Get xml for a version
GET http://localhost:3000/archive/770/versions/0JJBPS7H0PG1T.xml

# Add a version
:version := (with-temp-buffer (insert-file-contents "~/tmp/770/versions/0JJBPS7H0PG1T.xml") (buffer-string))

POST http://localhost:3000/api/documents/770/versions
Authorization: :auth-token
Content-Type: multipart/form-data; boundary=e82bc39c68f1417d9ea12c5456182f3c

--e82bc39c68f1417d9ea12c5456182f3c
Content-Disposition: form-data; name="file"; filename="6304.xml"
Content-Type: application/xml

:version
--e82bc39c68f1417d9ea12c5456182f3c
Content-Disposition: form-data; name="comment"

just a comment
--e82bc39c68f1417d9ea12c5456182f3c--

# Delete a non-existing version
DELETE http://localhost:3000/api/documents/105/versions/0
Authorization: :auth-token

# Delete an existing version
DELETE http://localhost:3000/api/documents/105/versions/8449
Authorization: :auth-token

##########
# Images #
##########

# Get all images for a document
GET http://localhost:3000/api/documents/644/images

# Get a specific image
GET http://localhost:3000/api/documents/644/images/10651

# Get a specific non-existing image
GET http://localhost:3000/api/documents/644/images/0

# Limit the results
GET http://localhost:3000/api/documents/576/images?limit=2

# Limit the results and use an offset
GET http://localhost:3000/api/documents/576/images?limit=2&offset=20

# Search an image
GET http://localhost:3000/api/documents/576/images?search=p015

# Add an image
:image := (with-temp-buffer (insert-file-contents "~/tmp/lambda.jpg") (buffer-string))

POST http://localhost:3000/api/documents/644/images
Authorization: :auth-token
Content-Type: multipart/form-data; boundary=e82bc39c68f1417d9ea12c5456182f3c

--e82bc39c68f1417d9ea12c5456182f3c
Content-Disposition: form-data; name="file"; filename="lambda.jpg"
Content-Type: application/jpg

:image
--e82bc39c68f1417d9ea12c5456182f3c--

# Delete a non-existing image
DELETE http://localhost:3000/api/documents/644/images/0
Authorization: :auth-token

# Delete an existing image
DELETE http://localhost:3000/api/documents/644/images/6692
Authorization: :auth-token

# Delete all images
DELETE http://localhost:3000/api/documents/105/images
Authorization: :auth-token

############
# Products #
############

# Get all products for a document
GET http://localhost:3000/api/documents/644/products

# Get a specific product
GET http://localhost:3000/api/documents/644/products/410

# Get a specific non-existing product
GET http://localhost:3000/api/documents/644/products/0

# Limit the results by type
GET http://localhost:3000/api/documents/644/products?type=0

# Limit the results by type
GET http://localhost:3000/api/documents/644/products?type=1

# Add a product
POST http://localhost:3000/api/documents/644/products
Authorization: :auth-token
Content-Type: application/json
{
	"product-number": "EB123457",
	"type": 2
}
# Add a product
POST http://localhost:3000/api/documents/644/products
Authorization: :auth-token
Content-Type: application/json
{
	"product-number": "PS123457",
	"type": 0
}

# Add a product twice
POST http://localhost:3000/api/documents/644/products
Authorization: :auth-token
Content-Type: application/json
{
	"product-number": "PS123457",
	"type": 0
}

# Add a product
POST http://localhost:3000/api/documents/644/products
Authorization: :auth-token
Content-Type: application/json
{
	"product-number": "ET123457",
	"type": 03
}

# Add an invalid product (invalid product-number)
POST http://localhost:3000/api/documents/644/products
Authorization: :auth-token
Content-Type: application/json
{
	"product-number": "HA123457",
	"type": 0
}

# Add an invalid product (invalid type)
POST http://localhost:3000/api/documents/644/products
Authorization: :auth-token
Content-Type: application/json
{
	"product-number": "PS123457",
	"type": 7
}

# Delete a non-existing product
DELETE http://localhost:3000/api/documents/644/products/0
Authorization: :auth-token

# Delete an existing product
DELETE http://localhost:3000/api/documents/644/products/412
Authorization: :auth-token

###########
# Metrics #
###########

# Get Metrics
GET http://localhost:3000/metrics

###########
# Preview #
###########

# Get EPUB
GET http://localhost:3000/api/documents/412/preview/epub

# Get SBSForm
GET http://localhost:3000/api/documents/412/preview/braille?contraction=1&cells-per-line=28&lines-per-page=8&hyphenation=true&toc-level=2&footer-level=2&include-macros=true&show-original-page-numbers=true&show-v-forms=true&downshift-ordinals=true&enable-capitalization=true&detailed-accented-chars=swiss&footnote-placement=level1

# Get the actual SBSForm artifact
GET http://localhost:3000/download/412.sbsform

# Get Large Print
GET http://localhost:3000/api/documents/644/preview/large-print

# Get Large Print with font-size
GET http://localhost:3000/api/documents/644/preview/large-print?font-size=25

# Get Large Print with invalid font-size
GET http://localhost:3000/api/documents/644/preview/large-print?font-size=13

# Get Large Print with many params
GET http://localhost:3000/api/documents/770/preview/large-print?page-style=plain&replace-em-with-quote=true&font-size=17&stock-size=a4paper&alignment=left&font=tiresias&line-spacing=doublespacing&end-notes=none&image-visibility=ignore

# Get the actual Large print artifact
GET http://localhost:3000/download/644_17pt.pdf

# Get Open Document
GET http://localhost:3000/api/documents/644/preview/open-document

# Get Open Document
GET http://localhost:3000/api/documents/644/preview/open-document?phonetics=true&image-handling=embed&line-numbers=true&answer=.._&asciimath=mathml

# Get Open Document
GET http://localhost:3000/api/documents/644/preview/open-document?asciimath=asciimath&phonetics=true&image-handling=embed&line-numbers=true&page-numbers=true&page-numbers-float=true&answer=.._

# Get the actual ODT artifact
GET http://localhost:3000/download/644.odt

# Get HTML
GET http://localhost:3000/api/documents/644/preview/html

# Get the actual html artifact
GET http://localhost:3000/download/644/html/644.html

#########
# Words #
#########

# Get all global words
GET http://localhost:3000/api/words?limit=2

# Get all global words with type 3
GET http://localhost:3000/api/words?type=3&limit=2

# Search a global word
GET http://localhost:3000/api/words?search=steuerfahndung

# Search a global word
GET http://localhost:3000/api/words?search=^steuerfahndung

# Search a global word with type
GET http://localhost:3000/api/words?search=aber&type=3

# Add a global word
PUT http://localhost:3000/api/words
Authorization: :auth-token
Content-Type: application/json
{
	"untranslated": "veryveryveryveryveryveryveryveryverylong",
	"type": 0,
	"uncontracted": "VERY",
	"contracted": "VVVL",
	"homograph-disambiguation": ""
}

###############
# Local words #
###############

# Get all local words
GET http://localhost:3000/api/documents/644/words?grade=0

# Get the total number of unknown words
HEAD http://localhost:3000/api/documents/644/words?grade=0


#################
# Unknown words #
#################

# Get all unknown words
GET http://localhost:3000/api/documents/105/unknown-words?grade=0

# Get the total number of unknown words
HEAD http://localhost:3000/api/documents/105/unknown-words?grade=0

# Get one unknown word
GET http://localhost:3000/api/documents/105/unknown-words?grade=0&limit=1

# Update an unknown word
PUT http://localhost:3000/api/documents/105/unknown-words
Authorization: :auth-token
Content-Type: application/json
{
    	"untranslated": "langstreckenlesen",
    	"type": 0,
    	"homograph-disambiguation": "",
    	"document-id": 105,
    	"isignored": true,
    	"islocal": false
}

# Update a non-existing unknown word
PUT http://localhost:3000/api/documents/105/unknown-words
Authorization: :auth-token
Content-Type: application/json
{
    	"untranslated": "not-existing",
    	"type": 0,
    	"homograph-disambiguation": "",
    	"document-id": 105,
    	"isignored": true,
    	"islocal": false
}

#####################
# Confirmable words #
#####################

# Confirmable words
GET http://localhost:3000/api/confirmable

######################################
# Manual tests for the static routes #
######################################

# Get the DTBook xml for a version
GET http://localhost:3000/archive/105/versions/01HPP0222GAKKFVZA94WN5RFE8.xml

# Get an image
GET http://localhost:3000/archive/105/images/lambda.jpg

#################
# ABACUS Import #
#################
##############
# Abacus API #
##############

# Add a production
POST http://localhost:3000/api/abacus/import
Accept: application/json
Content-Type: multipart/form-data; boundary=e82bc39c68f1417d9ea12c5456182f3c

--e82bc39c68f1417d9ea12c5456182f3c
Content-Disposition: form-data; name="file"; filename="SN1_DY99999.xml"
Content-Type: application/xml

<?xml version="1.0" encoding="utf-8"?>
<AbaConnectContainer>
  <Task>
    <Parameter/>
    <Transaction>
      <DocumentData command="mdaDocAdd">
        <artikel_nr>PS86142</artikel_nr>
        <title>Test - whout</title>
        <MetaData>
          <dc>
            <title>Test - whout</title>
            <creator>Test - Gubser, Paul</creator>
            <source>978-3-570-15263-0</source>
            <language>de</language>
            <identifier>EB11111</identifier>
            <date>2015-06-29</date>
          </dc>
          <sbs>
            <KST>54430</KST>
            <untertitel/>
            <verlag>DVA</verlag>
            <verlagsort>Altdorf</verlagsort>
            <auflageJahr>1. / 2011</auflageJahr>
            <printPageNumber>311</printPageNumber>
            <prodStatus>IN ARBEIT</prodStatus>
            <datenErhalten>13.12.2011 (pdf per Mail) / ts</datenErhalten>
            <schriftart>Grossdruck s/w</schriftart>
            <endformat/>
            <drucker>OCCS250</drucker>
            <doppelseitig>doppelseitig</doppelseitig>
            <bindung/>
            <breite>0</breite>
            <zeilen>0</zeilen>
            <auszug/>
            <zoom/>
            <qualitaet/>
            <prodPageSS>0</prodPageSS>
            <bpz/>
            <ervNr>0</ervNr>
            <laufzettelNr>501097</laufzettelNr>
            <rucksackNr>0</rucksackNr>
            <altersgruppe/>
            <gdBuchNr>0</gdBuchNr>
            <prodPagePS>0</prodPagePS>
            <anzahlBaende>0</anzahlBaende>
            <anzahlRelief>0</anzahlRelief>
            <vorlageHaus>ja</vorlageHaus>
            <katalogEintrag>ja</katalogEintrag>
            <verlagVerzeichnis>nein</verlagVerzeichnis>
            <daisy_producer>ja</daisy_producer>
	    <Aufwand_A2>D</Aufwand_A2>
          </sbs>
          <ncc>
            <setInfo>1</setInfo>
          </ncc>
        </MetaData>
      </DocumentData>
    </Transaction>
  </Task>
</AbaConnectContainer>
--e82bc39c68f1417d9ea12c5456182f3c--

# Modify a production
POST http://localhost:3000/api/abacus/import
Accept: application/json
Content-Type: multipart/form-data; boundary=e82bc39c68f1417d9ea12c5456182f3c

--e82bc39c68f1417d9ea12c5456182f3c
Content-Disposition: form-data; name="file"; filename="SN1_DY99999.xml"
Content-Type: application/xml

<?xml version="1.0" encoding="utf-8"?>
<AbaConnectContainer>
  <Task>
    <Parameter/>
    <Transaction>
      <DocumentData command="mdaDocAdd">
        <artikel_nr>PS86142</artikel_nr>
        <title>Test - whout</title>
        <MetaData>
          <dc>
            <title>Test - whout2</title>
            <creator>Test - Gubser, Paul</creator>
            <source>978-3-570-15263-0</source>
            <language>de</language>
            <identifier>EB11111</identifier>
            <date>2015-06-29</date>
          </dc>
          <sbs>
            <KST>54430</KST>
            <untertitel/>
            <verlag>DVA</verlag>
            <verlagsort>Altdorf</verlagsort>
            <auflageJahr>1. / 2011</auflageJahr>
            <printPageNumber>311</printPageNumber>
            <prodStatus>IN ARBEIT</prodStatus>
            <datenErhalten>13.12.2011 (pdf per Mail) / ts</datenErhalten>
            <schriftart>Grossdruck s/w</schriftart>
            <endformat/>
            <drucker>OCCS250</drucker>
            <doppelseitig>doppelseitig</doppelseitig>
            <bindung/>
            <breite>0</breite>
            <zeilen>0</zeilen>
            <auszug/>
            <zoom/>
            <qualitaet/>
            <prodPageSS>0</prodPageSS>
            <bpz/>
            <ervNr>0</ervNr>
            <laufzettelNr>501097</laufzettelNr>
            <rucksackNr>0</rucksackNr>
            <altersgruppe/>
            <gdBuchNr>0</gdBuchNr>
            <prodPagePS>0</prodPagePS>
            <anzahlBaende>0</anzahlBaende>
            <anzahlRelief>0</anzahlRelief>
            <vorlageHaus>ja</vorlageHaus>
            <katalogEintrag>ja</katalogEintrag>
            <verlagVerzeichnis>nein</verlagVerzeichnis>
            <daisy_producer>ja</daisy_producer>
	    <Aufwand_A2>D</Aufwand_A2>
          </sbs>
          <ncc>
            <setInfo>1</setInfo>
          </ncc>
        </MetaData>
      </DocumentData>
    </Transaction>
  </Task>
</AbaConnectContainer>
--e82bc39c68f1417d9ea12c5456182f3c--

# Add a production which isn't meant for Daisyproducer2
POST http://localhost:3000/api/abacus/import
Accept: application/json
Content-Type: multipart/form-data; boundary=e82bc39c68f1417d9ea12c5456182f3c

--e82bc39c68f1417d9ea12c5456182f3c
Content-Disposition: form-data; name="file"; filename="SN1_DY99999.xml"
Content-Type: application/xml

<?xml version="1.0" encoding="utf-8"?>
<AbaConnectContainer>
  <Task>
    <Parameter/>
    <Transaction>
      <DocumentData command="mdaDocAdd">
        <artikel_nr>PS86142</artikel_nr>
        <title>Test - whout</title>
        <MetaData>
          <dc>
            <title>Test - whout</title>
            <creator>Test - Gubser, Paul</creator>
            <source>978-3-570-15263-0</source>
            <language>de</language>
            <identifier>EB11111</identifier>
            <date>2015-06-29</date>
          </dc>
          <sbs>
            <KST>54430</KST>
            <untertitel/>
            <verlag>DVA</verlag>
            <verlagsort>Altdorf</verlagsort>
            <auflageJahr>1. / 2011</auflageJahr>
            <printPageNumber>311</printPageNumber>
            <prodStatus>IN ARBEIT</prodStatus>
            <datenErhalten>13.12.2011 (pdf per Mail) / ts</datenErhalten>
            <schriftart>Grossdruck s/w</schriftart>
            <endformat/>
            <drucker>OCCS250</drucker>
            <doppelseitig>doppelseitig</doppelseitig>
            <bindung/>
            <breite>0</breite>
            <zeilen>0</zeilen>
            <auszug/>
            <zoom/>
            <qualitaet/>
            <prodPageSS>0</prodPageSS>
            <bpz/>
            <ervNr>0</ervNr>
            <laufzettelNr>501097</laufzettelNr>
            <rucksackNr>0</rucksackNr>
            <altersgruppe/>
            <gdBuchNr>0</gdBuchNr>
            <prodPagePS>0</prodPagePS>
            <anzahlBaende>0</anzahlBaende>
            <anzahlRelief>0</anzahlRelief>
            <vorlageHaus>ja</vorlageHaus>
            <katalogEintrag>ja</katalogEintrag>
            <verlagVerzeichnis>nein</verlagVerzeichnis>
            <daisy_producer>nein</daisy_producer>
	    <Aufwand_A2>D</Aufwand_A2>
          </sbs>
          <ncc>
            <setInfo>1</setInfo>
          </ncc>
        </MetaData>
      </DocumentData>
    </Transaction>
  </Task>
</AbaConnectContainer>
--e82bc39c68f1417d9ea12c5456182f3c--

# Add a new product to a production
POST http://localhost:3000/api/abacus/import
Accept: application/json
Content-Type: multipart/form-data; boundary=e82bc39c68f1417d9ea12c5456182f3c

--e82bc39c68f1417d9ea12c5456182f3c
Content-Disposition: form-data; name="file"; filename="SN1_DY99999.xml"
Content-Type: application/xml

<?xml version="1.0" encoding="utf-8"?>
<AbaConnectContainer>
  <Task>
    <Parameter/>
    <Transaction>
      <DocumentData command="mdaDocAdd">
        <artikel_nr>ET86144</artikel_nr>
        <title>Test - whout</title>
        <MetaData>
          <dc>
            <title>Test - whout2</title>
            <creator>Test - Gubser, Paul</creator>
            <source>978-3-570-15263-0</source>
            <language>de</language>
            <identifier>EB11111</identifier>
            <date>2015-06-29</date>
          </dc>
          <sbs>
            <KST>54430</KST>
            <untertitel/>
            <verlag>DVA</verlag>
            <verlagsort>Altdorf</verlagsort>
            <auflageJahr>1. / 2011</auflageJahr>
            <printPageNumber>311</printPageNumber>
            <prodStatus>IN ARBEIT</prodStatus>
            <datenErhalten>13.12.2011 (pdf per Mail) / ts</datenErhalten>
            <schriftart>Grossdruck s/w</schriftart>
            <endformat/>
            <drucker>OCCS250</drucker>
            <doppelseitig>doppelseitig</doppelseitig>
            <bindung/>
            <breite>0</breite>
            <zeilen>0</zeilen>
            <auszug/>
            <zoom/>
            <qualitaet/>
            <prodPageSS>0</prodPageSS>
            <bpz/>
            <ervNr>0</ervNr>
            <laufzettelNr>501097</laufzettelNr>
            <rucksackNr>0</rucksackNr>
            <altersgruppe/>
            <gdBuchNr>0</gdBuchNr>
            <prodPagePS>0</prodPagePS>
            <anzahlBaende>0</anzahlBaende>
            <anzahlRelief>0</anzahlRelief>
            <vorlageHaus>ja</vorlageHaus>
            <katalogEintrag>ja</katalogEintrag>
            <verlagVerzeichnis>nein</verlagVerzeichnis>
            <daisy_producer>ja</daisy_producer>
	    <Aufwand_A2>D</Aufwand_A2>
          </sbs>
          <ncc>
            <setInfo>1</setInfo>
          </ncc>
        </MetaData>
      </DocumentData>
    </Transaction>
  </Task>
</AbaConnectContainer>
--e82bc39c68f1417d9ea12c5456182f3c--

# Remove the isbn from a production
POST http://localhost:3000/api/abacus/import
Accept: application/json
Content-Type: multipart/form-data; boundary=e82bc39c68f1417d9ea12c5456182f3c

--e82bc39c68f1417d9ea12c5456182f3c
Content-Disposition: form-data; name="file"; filename="SN1_DY99999.xml"
Content-Type: application/xml

<?xml version="1.0" encoding="utf-8"?>
<AbaConnectContainer>
  <Task>
    <Parameter/>
    <Transaction>
      <DocumentData command="mdaDocAdd">
        <artikel_nr>ET86144</artikel_nr>
        <title>Test - whout</title>
        <MetaData>
          <dc>
            <title>Test - whout2</title>
            <creator>Test - Gubser, Paul</creator>
            <source>keine</source>
            <language>de</language>
            <identifier>EB11111</identifier>
            <date>2015-06-29</date>
          </dc>
          <sbs>
            <KST>54430</KST>
            <untertitel/>
            <verlag>DVA</verlag>
            <verlagsort>Altdorf</verlagsort>
            <auflageJahr>1. / 2011</auflageJahr>
            <printPageNumber>311</printPageNumber>
            <prodStatus>IN ARBEIT</prodStatus>
            <datenErhalten>13.12.2011 (pdf per Mail) / ts</datenErhalten>
            <schriftart>Grossdruck s/w</schriftart>
            <endformat/>
            <drucker>OCCS250</drucker>
            <doppelseitig>doppelseitig</doppelseitig>
            <bindung/>
            <breite>0</breite>
            <zeilen>0</zeilen>
            <auszug/>
            <zoom/>
            <qualitaet/>
            <prodPageSS>0</prodPageSS>
            <bpz/>
            <ervNr>0</ervNr>
            <laufzettelNr>501097</laufzettelNr>
            <rucksackNr>0</rucksackNr>
            <altersgruppe/>
            <gdBuchNr>0</gdBuchNr>
            <prodPagePS>0</prodPagePS>
            <anzahlBaende>0</anzahlBaende>
            <anzahlRelief>0</anzahlRelief>
            <vorlageHaus>ja</vorlageHaus>
            <katalogEintrag>ja</katalogEintrag>
            <verlagVerzeichnis>nein</verlagVerzeichnis>
            <daisy_producer>ja</daisy_producer>
	    <Aufwand_A2>D</Aufwand_A2>
          </sbs>
          <ncc>
            <setInfo>1</setInfo>
          </ncc>
        </MetaData>
      </DocumentData>
    </Transaction>
  </Task>
</AbaConnectContainer>
--e82bc39c68f1417d9ea12c5456182f3c--

# Add the isbn again to the production
POST http://localhost:3000/api/abacus/import
Accept: application/json
Content-Type: multipart/form-data; boundary=e82bc39c68f1417d9ea12c5456182f3c

--e82bc39c68f1417d9ea12c5456182f3c
Content-Disposition: form-data; name="file"; filename="SN1_DY99999.xml"
Content-Type: application/xml

<?xml version="1.0" encoding="utf-8"?>
<AbaConnectContainer>
  <Task>
    <Parameter/>
    <Transaction>
      <DocumentData command="mdaDocAdd">
        <artikel_nr>ET86144</artikel_nr>
        <title>Test - whout</title>
        <MetaData>
          <dc>
            <title>Test - whout2</title>
            <creator>Test - Gubser, Paul</creator>
            <source>978-3-570-15263-0</source>
            <language>de</language>
            <identifier>EB11111</identifier>
            <date>2015-06-29</date>
          </dc>
          <sbs>
            <KST>54430</KST>
            <untertitel/>
            <verlag>DVA</verlag>
            <verlagsort>Altdorf</verlagsort>
            <auflageJahr>1. / 2011</auflageJahr>
            <printPageNumber>311</printPageNumber>
            <prodStatus>IN ARBEIT</prodStatus>
            <datenErhalten>13.12.2011 (pdf per Mail) / ts</datenErhalten>
            <schriftart>Grossdruck s/w</schriftart>
            <endformat/>
            <drucker>OCCS250</drucker>
            <doppelseitig>doppelseitig</doppelseitig>
            <bindung/>
            <breite>0</breite>
            <zeilen>0</zeilen>
            <auszug/>
            <zoom/>
            <qualitaet/>
            <prodPageSS>0</prodPageSS>
            <bpz/>
            <ervNr>0</ervNr>
            <laufzettelNr>501097</laufzettelNr>
            <rucksackNr>0</rucksackNr>
            <altersgruppe/>
            <gdBuchNr>0</gdBuchNr>
            <prodPagePS>0</prodPagePS>
            <anzahlBaende>0</anzahlBaende>
            <anzahlRelief>0</anzahlRelief>
            <vorlageHaus>ja</vorlageHaus>
            <katalogEintrag>ja</katalogEintrag>
            <verlagVerzeichnis>nein</verlagVerzeichnis>
            <daisy_producer>ja</daisy_producer>
	    <Aufwand_A2>D</Aufwand_A2>
          </sbs>
          <ncc>
            <setInfo>1</setInfo>
          </ncc>
        </MetaData>
      </DocumentData>
    </Transaction>
  </Task>
</AbaConnectContainer>
--e82bc39c68f1417d9ea12c5456182f3c--


################
# Alfresco API #
################

# Find out if a document is even archived
GET http://localhost:3000/api/alfresco/329

# Initiate a synchronization process
POST http://localhost:3000/api/alfresco/770
Authorization: :auth-token

# Synchronize a book with images (Betty Bossy cook book)
POST http://localhost:3000/api/alfresco/768
Authorization: :auth-token

# Synchronize a book with images
POST http://localhost:3000/api/alfresco/688
Authorization: :auth-token

# Synchronize a book with images
POST http://localhost:3000/api/alfresco/768
Authorization: :auth-token
